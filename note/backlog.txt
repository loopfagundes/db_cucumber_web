====[BACKLOG]====

RESOLVER O PROBLEMA:
+---------------------------+
|    [✔] - RESOLVIDO        |
+---------------------------+
|    [✖] - NÃO RESOLVIDO    |
+---------------------------+

1. [✔] Gravar e obter os dados dos usuarios. (properties):
    um metodos(@Entao) com duas properties e nao preciso criar dois metodos por cada properties.
    Se for nao tem como, deixar assim dois metodos e duas get e set de properties.

    ✔ COMO RESOLVEU?
    - Tem solução o problema que so usar String dentro "@()" depois de metodo.
      exemplo: @Então("Preencho o campo {1_string} do usuário {2_string})
      pode ser usar string com flexivel.
      usar import classe: 'new Element(locator).getData(1_string, 2_string);'

    TEM COMO A MELHOR ESTRUTURA?
    - Não vejo necessidade a melhor. Talvez em breve!


2. [✔] Separados SD:
    quando criar uma pasta de Steps e executou para teste e dando error.
    somente dentro pasta StepDefs funcionou.
    *isso que eu quero separados*

    ✔ COMO RESOLVEU?
    - Criei uma pasta de custom dentro da steps, pois stepdefs é padrão.

    TEM COMO A MELHOR ESTRUTURA?
    ✔ Caminho da pasta: stepdefs > custom > classes: TesteSD, LoginSD...
        O que é SD? é Step Definitions de ingles, Definições de etapas de portugues.
        O que é Custom? é de ingles, personalizado de portugues.

3. [✔] Arquivo de register_page cadastrou um novo usuario com sucesso e fechar o teste.
    depois criei feature de login_test e testou,
    e retornou a mesnagem "Usuário ou senha inválido. Tente novamente ou verifique suas informações!"
    pois ja gravou dentro a properties.

    ✔ COMO RESOLVEU?
    - Por causa de sessão, já resolvi o problema dentro da classe de Hooks
    - Apaguei o metodo Atfer no Hooks e criei um metodo de Atfer no TestRunner se quiser executar todos testes como suite.

    TEM COMO A MELHOR ESTRUTURA?
    ✔ Para encerrar o teste. É bom dentro feature mais flexivel o teste.
        Quando executar o teste, o cucumber vai entender quando encerrar.

4. [✔] Classe TestRunner, quando executei o teste foi primeiro login_test e depois register.
    Quero que ordem primeiro register e depois login.

    ✔ COMO RESOLVEU?
    - É só colocar numero em ordem no arquivo de feature.

    TEM COMO A MELHOR ESTRUTURA?
    ✔ Pode ser em ordem dos numeros no arquivo de feature, exemplo: 'features/
                                                             1_test.feature,
                                                             2_teste.feature'

5. [✔] Como usar Assert? Ja executei para testar, porem foi ignorou o valor e dando error."

    ✔ COMO RESOLVEU?
    - Criei um metodo de AsssertEquals no dentro da classe Element.
    - Criei um metodo de viewText antes de AssertEquals no dentro do Element.

    TEM COMO A MELHOR ESTRUTURA?
    ✔ Tentar mais flexivel no String.
    ✔ Nao precisa mais criar cada metodo como duvido numero 1.
    ✔ Possivel trocar a variavel de elementToBeClickable para visibilityOf.
        O que é elementToBeClickable? O elemento tem que ser clicavel
        O que é visibilityOf? É visibilidade de elementos